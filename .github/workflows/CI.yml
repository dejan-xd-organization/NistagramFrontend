# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master, developer ]
  pull_request:
    branches: [ master, developer ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  Angular:
    runs-on: ubuntu-latest
    steps:
    - name: Setup Node
      uses: actions/setup-node@v1 #this will install Node and npm on Ubuntu
      with:
        node-version: '12.x'
    - name: Checkout code
      uses: actions/checkout@v2
    - name: npm install
      run: npm install
    - name: npm install cli
      run: npm install -g @angular/cli > /dev/null
    - name: ng build
      run: ng build --prod --output-path=dist
    - name: npm test
      run: npm run test
      
  SonarCloud:
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repo SonarCloud
        uses: actions/checkout@v2
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      
  Artifact:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build NistagramFrontend artifact
      working-directory: .
      run: |
        npm ci
        CI=false npm run build --if-present
    - name: Semantic Release
      uses: cycjimmy/semantic-release-action@v2
      with:
        semantic_version: 15.13.28  # It is recommended to specify specifying version range
                                    # for semantic-release.
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
    - name: Bump version and push tag
      id: tag_version
      uses: mathieudutour/github-tag-action@v5.5
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        append_to_pre_release_tag: ""
        default_bump: major
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ steps.tag_version.outputs.new_tag }}
        release_name: Release ${{ steps.tag_version.outputs.new_tag }}
        prerelease: false
    - name: Archive build
      if: success()
      uses: actions/upload-artifact@v2
      with:
        name: deploy_dist
        path: dist
    - name: Create directory results/artifacts 
      run: 'mkdir --parents results/artifacts'
    - name: Create ci-env.txt in path directory
      run: 'env | grep GITHUB_ | sort > results/artifacts/ci-env.txt'
    - uses: actions/upload-artifact@v2
      with:
          name: artifacts_from_ubuntu
          path: results/artifacts/
  
  Deploy:
    runs-on: ubuntu-latest
    needs: [Angular, SonarCloud, Artifact]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download build
        uses: actions/download-artifact@v1
        with:
          name: deploy_dist
      - name: Angular Deploy gh-pages Actions
        uses: AhsanAyaz/angular-deploy-gh-pages-actions@v1.3.1
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN  }} 
          build_configuration: production 
          base_href: /NistagramFrontend/  
          deploy_branch: gh-pages 
          angular_dist_build_folder: dist/NistagramFrontend
          
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      
      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ secrets.DOCKER_HUB_USERNAME }}/frontend:latest
      
      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
    
