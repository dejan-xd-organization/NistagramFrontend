# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master, developer ]
  pull_request:
    branches: [ master, developer ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  Angular:
    runs-on: ubuntu-latest

    steps:
    - name: Setup Node
      uses: actions/setup-node@v1 #this will install Node and npm on Ubuntu
      with:
        node-version: '12.x'
    - name: Checkout code
      uses: actions/checkout@v2
    - run: npm install
    - run: npm install -g @angular/cli > /dev/null
    - run: ng build --prod --output-path=dist
    - run: npm run test
    - name: Build NistagramFrontend artifact
      working-directory: .
      run: |
        npm ci
        CI=false npm run build --if-present
    - name: Bump version and push tag
      id: tag_version
      uses: mathieudutour/github-tag-action@v5.5
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        append_to_pre_release_tag: ""
        default_bump: major
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ steps.tag_version.outputs.new_tag }}
        release_name: Release ${{ steps.tag_version.outputs.new_tag }}
        prerelease: false
        
        
        
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Use Node 12.x
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm run build
      - name: Test
        run: npm run test
      - name: Archive build
        if: success()
        uses: actions/upload-artifact@v2
        with:
          name: deploy_dist
          path: dist
      - name: Archive code coverage result
        if: success()
        uses: actions/upload-artifact@v2
        with:	
          name: ${{ env.name }}-name	
          path: ${{ github.workspace }}/artifact/**/*
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Download build
        uses: actions/download-artifact@v1
        with:
          name: deploy_dist
      - name: Deploy to GitHub Pages
        uses: dejan-xd-organization/NistagramFrontend@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages
          FOLDER: deploy_dist/test
          
  job_example_upload_windows:
        runs-on: windows-latest
        name: '[Windows] Upload artifacts'
        steps:
            -   run: 'mkdir results'
            -   run: 'mkdir results\artifacts'
            -   run: 'dir $( $GITHUB_WORKSPACE )'
            -   run: 'env | Where-Object {$_ | Select-String "GITHUB_"} | sort > results\artifacts\ci-env.txt'
            -   uses: actions/upload-artifact@v2
                with:
                    name: artifacts_from_windows
                    path: results/artifacts/
    
